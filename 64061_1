import java.util.LinkedList;
import java.util.List;
class Solution {
    public int solution(int[][] board, int[] moves) {
        int answer = 0;
        List<Integer> list = new LinkedList<>();


        for (int i = 0; i < moves.length; i++) {
            int num = moves[i] - 1;//배열의 숫자와 일치 0번째 시작
            for (int j = 0; j < board.length; j++) {
                if (j == board.length - 1 && board[j][num] == 0) {
                    continue;
                } else if (board[j][num] != 0) {
                    if (list.size() == 0) {
                        list.add(board[j][num]);
                    } else if (list.get(list.size() - 1) == board[j][num]) {
                        answer++;
                        list.remove(list.size() - 1);
                    } else {
                        list.add(board[j][num]);

                    }

                    board[j][num] = 0;
                    break;
                }
            }


        }
        answer=answer*2;
        return answer;
    }
}
